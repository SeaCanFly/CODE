<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_node_manager" kind="class" prot="public">
    <compoundname>NodeManager</compoundname>
    <includes refid="_node_manager_8h" local="no">NodeManager.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_node_manager_1a68104f8ce1644e5a2551f40f02336354" prot="public" static="no" mutable="no">
        <type><ref refid="class_node" kindref="compound">Node</ref> *</type>
        <definition>Node* NodeManager::m_node</definition>
        <argsstring></argsstring>
        <name>m_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/NodeManager.h" line="7" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/NodeManager.h" bodystart="7" bodyend="-1"/>
        <referencedby refid="class_node_manager_1aaeb2394741ae4e4e88bf1c263fc32d9b" compoundref="_node_manager_8cpp" startline="7" endline="10">getNode</referencedby>
        <referencedby refid="class_node_manager_1a5545a345b33ad65579f64173298013c9" compoundref="_node_manager_8cpp" startline="3" endline="6">NodeManager</referencedby>
        <referencedby refid="class_node_manager_1a8f52614e110fa17e4fab9bb5486fd77a" compoundref="_node_manager_8cpp" startline="11" endline="14">~NodeManager</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_node_manager_1af1ebc3eef1c1b27c8d0961039de52938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NodeManager::NodeManager</definition>
        <argsstring>()</argsstring>
        <name>NodeManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/NodeManager.h" line="8" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/NodeManager.cpp" bodystart="2" bodyend="2"/>
      </memberdef>
      <memberdef kind="function" id="class_node_manager_1a5545a345b33ad65579f64173298013c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NodeManager::NodeManager</definition>
        <argsstring>(int i_x, int i_y)</argsstring>
        <name>NodeManager</name>
        <param>
          <type>int</type>
          <declname>i_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/NodeManager.h" line="9" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/NodeManager.cpp" bodystart="3" bodyend="6"/>
        <references refid="class_node_manager_1a68104f8ce1644e5a2551f40f02336354" compoundref="_node_manager_8h" startline="7">m_node</references>
      </memberdef>
      <memberdef kind="function" id="class_node_manager_1aaeb2394741ae4e4e88bf1c263fc32d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_node" kindref="compound">Node</ref> *</type>
        <definition>Node * NodeManager::getNode</definition>
        <argsstring>()</argsstring>
        <name>getNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/NodeManager.h" line="10" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/NodeManager.cpp" bodystart="7" bodyend="10"/>
        <references refid="class_node_manager_1a68104f8ce1644e5a2551f40f02336354" compoundref="_node_manager_8h" startline="7">m_node</references>
        <referencedby refid="class_node_1add9e86af3c4c50f8cc3a94701aec919a" compoundref="_node_8cpp" startline="30" endline="41">Node::addNode</referencedby>
        <referencedby refid="_source_8cpp_1a8435458e1426e91193f0b4c8f3e7238e" compoundref="_source_8cpp" startline="17" endline="24">createFood</referencedby>
        <referencedby refid="_source_8cpp_1a21e1eeebb5634c95675ef7f690be125b" compoundref="_source_8cpp" startline="280" endline="291">fCheck</referencedby>
        <referencedby refid="_source_8cpp_1a7ff82d5a24879e9d63a711eea2a6d91b" compoundref="_source_8cpp" startline="40" endline="84">fDraw</referencedby>
        <referencedby refid="_source_8cpp_1a0b008f58382530bd6efb0e594bfbe639" compoundref="_source_8cpp" startline="128" endline="279">fMoving</referencedby>
        <referencedby refid="_source_8cpp_1acdced9d97e599e727ecdc50644e6eff5" compoundref="_source_8cpp" startline="26" endline="39">fReset</referencedby>
        <referencedby refid="_source_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="_source_8cpp" startline="292" endline="320">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_manager_1a8f52614e110fa17e4fab9bb5486fd77a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NodeManager::~NodeManager</definition>
        <argsstring>()</argsstring>
        <name>~NodeManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/NodeManager.h" line="11" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/NodeManager.cpp" bodystart="11" bodyend="14"/>
        <references refid="class_node_manager_1a68104f8ce1644e5a2551f40f02336354" compoundref="_node_manager_8h" startline="7">m_node</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>NodeManager</label>
        <link refid="class_node_manager"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_node</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Node</label>
        <link refid="class_node"/>
        <childnode refid="4" relation="usage">
          <edgelabel>mp_next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/NodeManager.h" line="4" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/NodeManager.h" bodystart="3" bodyend="13"/>
    <listofallmembers>
      <member refid="class_node_manager_1aaeb2394741ae4e4e88bf1c263fc32d9b" prot="public" virt="non-virtual"><scope>NodeManager</scope><name>getNode</name></member>
      <member refid="class_node_manager_1a68104f8ce1644e5a2551f40f02336354" prot="public" virt="non-virtual"><scope>NodeManager</scope><name>m_node</name></member>
      <member refid="class_node_manager_1af1ebc3eef1c1b27c8d0961039de52938" prot="public" virt="non-virtual"><scope>NodeManager</scope><name>NodeManager</name></member>
      <member refid="class_node_manager_1a5545a345b33ad65579f64173298013c9" prot="public" virt="non-virtual"><scope>NodeManager</scope><name>NodeManager</name></member>
      <member refid="class_node_manager_1a8f52614e110fa17e4fab9bb5486fd77a" prot="public" virt="non-virtual"><scope>NodeManager</scope><name>~NodeManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
