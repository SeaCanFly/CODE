<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_node" kind="class" prot="public">
    <compoundname>Node</compoundname>
    <includes refid="_node_8h" local="no">Node.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_node_1a12d155ef94a9fc0db3b369c5199ba108" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Node::mi_x</definition>
        <argsstring></argsstring>
        <name>mi_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="8" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" bodystart="8" bodyend="-1"/>
        <referencedby refid="class_node_1add9e86af3c4c50f8cc3a94701aec919a" compoundref="_node_8cpp" startline="30" endline="41">addNode</referencedby>
        <referencedby refid="class_node_1acdd8a534d4f9cd113c6b7e17cd7f81bd" compoundref="_node_8cpp" startline="19" endline="29">getCheck</referencedby>
        <referencedby refid="class_node_1a6c026e5d8c28591c6e2bd08c68619fd1" compoundref="_node_8cpp" startline="15" endline="15">getX</referencedby>
        <referencedby refid="class_node_1ab0b23dc41fc08a1dcccb04b09ae06d9d" compoundref="_node_8cpp" startline="6" endline="6">movePosition</referencedby>
        <referencedby refid="class_node_1ad87db00092d091058b0ec465e0624818" compoundref="_node_8cpp" startline="5" endline="5">setPosition</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_node_1a1744c7d9b37545bb73001399c7f855c4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Node::mi_y</definition>
        <argsstring></argsstring>
        <name>mi_y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="8" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" bodystart="8" bodyend="-1"/>
        <referencedby refid="class_node_1add9e86af3c4c50f8cc3a94701aec919a" compoundref="_node_8cpp" startline="30" endline="41">addNode</referencedby>
        <referencedby refid="class_node_1acdd8a534d4f9cd113c6b7e17cd7f81bd" compoundref="_node_8cpp" startline="19" endline="29">getCheck</referencedby>
        <referencedby refid="class_node_1abab48a3f494994d4f456897f3372d3ae" compoundref="_node_8cpp" startline="16" endline="16">getY</referencedby>
        <referencedby refid="class_node_1ab0b23dc41fc08a1dcccb04b09ae06d9d" compoundref="_node_8cpp" startline="6" endline="6">movePosition</referencedby>
        <referencedby refid="class_node_1ad87db00092d091058b0ec465e0624818" compoundref="_node_8cpp" startline="5" endline="5">setPosition</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_node_1a4b95180cfc98d523321b61842d1a01d8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Node::mi_direct</definition>
        <argsstring></argsstring>
        <name>mi_direct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="9" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" bodystart="9" bodyend="-1"/>
        <referencedby refid="class_node_1a325a2c26bf75caab66d4674e4d405734" compoundref="_node_8cpp" startline="14" endline="14">getDirect</referencedby>
        <referencedby refid="class_node_1ac1fbda4d3c444a43f209dd6af07a5ff4" compoundref="_node_8cpp" startline="8" endline="8">setDirect</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_node_1af9af46a882c51d11ae29cba4892302d6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Node::mi_speed</definition>
        <argsstring></argsstring>
        <name>mi_speed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="10" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" bodystart="10" bodyend="-1"/>
        <referencedby refid="class_node_1abd8c63f1d35fdce89239a045caf23d3d" compoundref="_node_8cpp" startline="11" endline="11">getSpeed</referencedby>
        <referencedby refid="class_node_1a29c81ecb26563f7c247ea4f7fd035a1d" compoundref="_node_8cpp" startline="10" endline="10">setSpeed</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_node_1a4f077b746d9431f5a7143c3467244fc8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Node::mb_exist</definition>
        <argsstring></argsstring>
        <name>mb_exist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="11" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" bodystart="11" bodyend="-1"/>
        <referencedby refid="class_node_1aaa0bb57c10aa1b1e64d0f21e6142257c" compoundref="_node_8cpp" startline="12" endline="12">getExist</referencedby>
        <referencedby refid="class_node_1ab4a0973f82e40fb00538cffe3b6a887f" compoundref="_node_8cpp" startline="9" endline="9">setExist</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_node_1aed92691e64427085e41b0bd58860aa37" prot="private" static="no" mutable="no">
        <type><ref refid="class_node_manager" kindref="compound">NodeManager</ref> *</type>
        <definition>NodeManager* Node::mp_next</definition>
        <argsstring></argsstring>
        <name>mp_next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="12" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" bodystart="12" bodyend="-1"/>
        <referencedby refid="class_node_1add9e86af3c4c50f8cc3a94701aec919a" compoundref="_node_8cpp" startline="30" endline="41">addNode</referencedby>
        <referencedby refid="class_node_1af7b5e28ec7663054e08fcce98ca2272a" compoundref="_node_8cpp" startline="18" endline="18">getPNext</referencedby>
        <referencedby refid="class_node_1aba0f72cd14a2d1532ca5c8281c2be9c8" compoundref="_node_8cpp" startline="17" endline="17">setPNext</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_node_1a220147bce290ae75325ecdcb0398e31a" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char Node::mc_shape</definition>
        <argsstring></argsstring>
        <name>mc_shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="13" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" bodystart="13" bodyend="-1"/>
        <referencedby refid="class_node_1a4de5bd34f40d854f7cae8f9ce94ca6f1" compoundref="_node_8cpp" startline="13" endline="13">getShape</referencedby>
        <referencedby refid="class_node_1ac3b392c215f2ff1b09b0be53de79d50c" compoundref="_node_8cpp" startline="7" endline="7">setShape</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_node_1ad7a34779cad45d997bfd6d3d8043c75f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Node::Node</definition>
        <argsstring>()</argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="15" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="3" bodyend="3"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a2f2d97efa6eaf26c2f8e8b0cd1573f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Node::Node</definition>
        <argsstring>(int i_x, int i_y)</argsstring>
        <name>Node</name>
        <param>
          <type>int</type>
          <declname>i_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="16" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="4" bodyend="4"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1ad87db00092d091058b0ec465e0624818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::setPosition</definition>
        <argsstring>(int i_x, int i_y)</argsstring>
        <name>setPosition</name>
        <param>
          <type>int</type>
          <declname>i_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="17" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="5" bodyend="5"/>
        <references refid="class_node_1a12d155ef94a9fc0db3b369c5199ba108" compoundref="_node_8h" startline="8">mi_x</references>
        <references refid="class_node_1a1744c7d9b37545bb73001399c7f855c4" compoundref="_node_8h" startline="8">mi_y</references>
        <referencedby refid="class_node_1add9e86af3c4c50f8cc3a94701aec919a" compoundref="_node_8cpp" startline="30" endline="41">addNode</referencedby>
        <referencedby refid="_source_8cpp_1a0b008f58382530bd6efb0e594bfbe639" compoundref="_source_8cpp" startline="128" endline="279">fMoving</referencedby>
        <referencedby refid="_source_8cpp_1acdced9d97e599e727ecdc50644e6eff5" compoundref="_source_8cpp" startline="26" endline="39">fReset</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1ab0b23dc41fc08a1dcccb04b09ae06d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::movePosition</definition>
        <argsstring>(int i_mx, int i_my)</argsstring>
        <name>movePosition</name>
        <param>
          <type>int</type>
          <declname>i_mx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i_my</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="18" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="6" bodyend="6"/>
        <references refid="class_node_1a12d155ef94a9fc0db3b369c5199ba108" compoundref="_node_8h" startline="8">mi_x</references>
        <references refid="class_node_1a1744c7d9b37545bb73001399c7f855c4" compoundref="_node_8h" startline="8">mi_y</references>
        <referencedby refid="_source_8cpp_1a0b008f58382530bd6efb0e594bfbe639" compoundref="_source_8cpp" startline="128" endline="279">fMoving</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1ac3b392c215f2ff1b09b0be53de79d50c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::setShape</definition>
        <argsstring>(char c_shape)</argsstring>
        <name>setShape</name>
        <param>
          <type>char</type>
          <declname>c_shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="19" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="7" bodyend="7"/>
        <references refid="class_node_1a220147bce290ae75325ecdcb0398e31a" compoundref="_node_8h" startline="13">mc_shape</references>
        <referencedby refid="class_node_1add9e86af3c4c50f8cc3a94701aec919a" compoundref="_node_8cpp" startline="30" endline="41">addNode</referencedby>
        <referencedby refid="_source_8cpp_1a8435458e1426e91193f0b4c8f3e7238e" compoundref="_source_8cpp" startline="17" endline="24">createFood</referencedby>
        <referencedby refid="_source_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="_source_8cpp" startline="292" endline="320">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1ac1fbda4d3c444a43f209dd6af07a5ff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::setDirect</definition>
        <argsstring>(int i_direct)</argsstring>
        <name>setDirect</name>
        <param>
          <type>int</type>
          <declname>i_direct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="20" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="8" bodyend="8"/>
        <references refid="class_node_1a4b95180cfc98d523321b61842d1a01d8" compoundref="_node_8h" startline="9">mi_direct</references>
        <referencedby refid="_source_8cpp_1a21e1eeebb5634c95675ef7f690be125b" compoundref="_source_8cpp" startline="280" endline="291">fCheck</referencedby>
        <referencedby refid="_source_8cpp_1ad23c5074f4f56a6554aa9cb0335f17af" compoundref="_source_8cpp" startline="85" endline="127">keyDown</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1ab4a0973f82e40fb00538cffe3b6a887f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::setExist</definition>
        <argsstring>(bool b_exist)</argsstring>
        <name>setExist</name>
        <param>
          <type>bool</type>
          <declname>b_exist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="21" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="9" bodyend="9"/>
        <references refid="class_node_1a4f077b746d9431f5a7143c3467244fc8" compoundref="_node_8h" startline="11">mb_exist</references>
        <referencedby refid="class_node_1add9e86af3c4c50f8cc3a94701aec919a" compoundref="_node_8cpp" startline="30" endline="41">addNode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1a29c81ecb26563f7c247ea4f7fd035a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::setSpeed</definition>
        <argsstring>(int i_speed)</argsstring>
        <name>setSpeed</name>
        <param>
          <type>int</type>
          <declname>i_speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="22" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="10" bodyend="10"/>
        <references refid="class_node_1af9af46a882c51d11ae29cba4892302d6" compoundref="_node_8h" startline="10">mi_speed</references>
        <referencedby refid="_source_8cpp_1a21e1eeebb5634c95675ef7f690be125b" compoundref="_source_8cpp" startline="280" endline="291">fCheck</referencedby>
        <referencedby refid="_source_8cpp_1ad23c5074f4f56a6554aa9cb0335f17af" compoundref="_source_8cpp" startline="85" endline="127">keyDown</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1abd8c63f1d35fdce89239a045caf23d3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Node::getSpeed</definition>
        <argsstring>()</argsstring>
        <name>getSpeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="23" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="11" bodyend="11"/>
        <references refid="class_node_1af9af46a882c51d11ae29cba4892302d6" compoundref="_node_8h" startline="10">mi_speed</references>
      </memberdef>
      <memberdef kind="function" id="class_node_1aaa0bb57c10aa1b1e64d0f21e6142257c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Node::getExist</definition>
        <argsstring>()</argsstring>
        <name>getExist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="24" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="12" bodyend="12"/>
        <references refid="class_node_1a4f077b746d9431f5a7143c3467244fc8" compoundref="_node_8h" startline="11">mb_exist</references>
        <referencedby refid="_source_8cpp_1a7ff82d5a24879e9d63a711eea2a6d91b" compoundref="_source_8cpp" startline="40" endline="84">fDraw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1a4de5bd34f40d854f7cae8f9ce94ca6f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char Node::getShape</definition>
        <argsstring>()</argsstring>
        <name>getShape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="25" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="13" bodyend="13"/>
        <references refid="class_node_1a220147bce290ae75325ecdcb0398e31a" compoundref="_node_8h" startline="13">mc_shape</references>
        <referencedby refid="_source_8cpp_1a7ff82d5a24879e9d63a711eea2a6d91b" compoundref="_source_8cpp" startline="40" endline="84">fDraw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1a325a2c26bf75caab66d4674e4d405734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Node::getDirect</definition>
        <argsstring>()</argsstring>
        <name>getDirect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="26" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="14" bodyend="14"/>
        <references refid="class_node_1a4b95180cfc98d523321b61842d1a01d8" compoundref="_node_8h" startline="9">mi_direct</references>
        <referencedby refid="_source_8cpp_1a0b008f58382530bd6efb0e594bfbe639" compoundref="_source_8cpp" startline="128" endline="279">fMoving</referencedby>
        <referencedby refid="_source_8cpp_1ad23c5074f4f56a6554aa9cb0335f17af" compoundref="_source_8cpp" startline="85" endline="127">keyDown</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1a6c026e5d8c28591c6e2bd08c68619fd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Node::getX</definition>
        <argsstring>()</argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="27" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="15" bodyend="15"/>
        <references refid="class_node_1a12d155ef94a9fc0db3b369c5199ba108" compoundref="_node_8h" startline="8">mi_x</references>
        <referencedby refid="class_node_1add9e86af3c4c50f8cc3a94701aec919a" compoundref="_node_8cpp" startline="30" endline="41">addNode</referencedby>
        <referencedby refid="_source_8cpp_1a21e1eeebb5634c95675ef7f690be125b" compoundref="_source_8cpp" startline="280" endline="291">fCheck</referencedby>
        <referencedby refid="_source_8cpp_1a0b008f58382530bd6efb0e594bfbe639" compoundref="_source_8cpp" startline="128" endline="279">fMoving</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1abab48a3f494994d4f456897f3372d3ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Node::getY</definition>
        <argsstring>()</argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="28" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="16" bodyend="16"/>
        <references refid="class_node_1a1744c7d9b37545bb73001399c7f855c4" compoundref="_node_8h" startline="8">mi_y</references>
        <referencedby refid="class_node_1add9e86af3c4c50f8cc3a94701aec919a" compoundref="_node_8cpp" startline="30" endline="41">addNode</referencedby>
        <referencedby refid="_source_8cpp_1a21e1eeebb5634c95675ef7f690be125b" compoundref="_source_8cpp" startline="280" endline="291">fCheck</referencedby>
        <referencedby refid="_source_8cpp_1a0b008f58382530bd6efb0e594bfbe639" compoundref="_source_8cpp" startline="128" endline="279">fMoving</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1aba0f72cd14a2d1532ca5c8281c2be9c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::setPNext</definition>
        <argsstring>(NodeManager *p_next)</argsstring>
        <name>setPNext</name>
        <param>
          <type><ref refid="class_node_manager" kindref="compound">NodeManager</ref> *</type>
          <declname>p_next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="29" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="17" bodyend="17"/>
        <references refid="class_node_1aed92691e64427085e41b0bd58860aa37" compoundref="_node_8h" startline="12">mp_next</references>
        <referencedby refid="class_node_1add9e86af3c4c50f8cc3a94701aec919a" compoundref="_node_8cpp" startline="30" endline="41">addNode</referencedby>
        <referencedby refid="_source_8cpp_1acdced9d97e599e727ecdc50644e6eff5" compoundref="_source_8cpp" startline="26" endline="39">fReset</referencedby>
        <referencedby refid="_source_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="_source_8cpp" startline="292" endline="320">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1af7b5e28ec7663054e08fcce98ca2272a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_node_manager" kindref="compound">NodeManager</ref> *</type>
        <definition>NodeManager * Node::getPNext</definition>
        <argsstring>()</argsstring>
        <name>getPNext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="30" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="18" bodyend="18"/>
        <references refid="class_node_1aed92691e64427085e41b0bd58860aa37" compoundref="_node_8h" startline="12">mp_next</references>
        <referencedby refid="_source_8cpp_1a7ff82d5a24879e9d63a711eea2a6d91b" compoundref="_source_8cpp" startline="40" endline="84">fDraw</referencedby>
        <referencedby refid="_source_8cpp_1a0b008f58382530bd6efb0e594bfbe639" compoundref="_source_8cpp" startline="128" endline="279">fMoving</referencedby>
        <referencedby refid="_source_8cpp_1acdced9d97e599e727ecdc50644e6eff5" compoundref="_source_8cpp" startline="26" endline="39">fReset</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1acdd8a534d4f9cd113c6b7e17cd7f81bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Node::getCheck</definition>
        <argsstring>(int i_x, int i_y)</argsstring>
        <name>getCheck</name>
        <param>
          <type>int</type>
          <declname>i_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="31" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="19" bodyend="29"/>
        <references refid="class_node_1a12d155ef94a9fc0db3b369c5199ba108" compoundref="_node_8h" startline="8">mi_x</references>
        <references refid="class_node_1a1744c7d9b37545bb73001399c7f855c4" compoundref="_node_8h" startline="8">mi_y</references>
        <referencedby refid="_source_8cpp_1a7ff82d5a24879e9d63a711eea2a6d91b" compoundref="_source_8cpp" startline="40" endline="84">fDraw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_node_1add9e86af3c4c50f8cc3a94701aec919a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::addNode</definition>
        <argsstring>(NodeManager &amp;food)</argsstring>
        <name>addNode</name>
        <param>
          <type><ref refid="class_node_manager" kindref="compound">NodeManager</ref> &amp;</type>
          <declname>food</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="32" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.cpp" bodystart="30" bodyend="41"/>
        <references refid="class_node_manager_1aaeb2394741ae4e4e88bf1c263fc32d9b" compoundref="_node_manager_8cpp" startline="7" endline="10">NodeManager::getNode</references>
        <references refid="class_node_1a6c026e5d8c28591c6e2bd08c68619fd1" compoundref="_node_8cpp" startline="15" endline="15">getX</references>
        <references refid="class_node_1abab48a3f494994d4f456897f3372d3ae" compoundref="_node_8cpp" startline="16" endline="16">getY</references>
        <references refid="class_node_1a12d155ef94a9fc0db3b369c5199ba108" compoundref="_node_8h" startline="8">mi_x</references>
        <references refid="class_node_1a1744c7d9b37545bb73001399c7f855c4" compoundref="_node_8h" startline="8">mi_y</references>
        <references refid="class_node_1aed92691e64427085e41b0bd58860aa37" compoundref="_node_8h" startline="12">mp_next</references>
        <references refid="class_node_1ab4a0973f82e40fb00538cffe3b6a887f" compoundref="_node_8cpp" startline="9" endline="9">setExist</references>
        <references refid="class_node_1aba0f72cd14a2d1532ca5c8281c2be9c8" compoundref="_node_8cpp" startline="17" endline="17">setPNext</references>
        <references refid="class_node_1ad87db00092d091058b0ec465e0624818" compoundref="_node_8cpp" startline="5" endline="5">setPosition</references>
        <references refid="class_node_1ac3b392c215f2ff1b09b0be53de79d50c" compoundref="_node_8cpp" startline="7" endline="7">setShape</references>
        <referencedby refid="_source_8cpp_1a0b008f58382530bd6efb0e594bfbe639" compoundref="_source_8cpp" startline="128" endline="279">fMoving</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>NodeManager</label>
        <link refid="class_node_manager"/>
        <childnode refid="1" relation="usage">
          <edgelabel>m_node</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Node</label>
        <link refid="class_node"/>
        <childnode refid="2" relation="usage">
          <edgelabel>mp_next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" line="6" column="1" bodyfile="D:/Temp/C++/Visual Studio 2017/snake/snake/Node.h" bodystart="5" bodyend="33"/>
    <listofallmembers>
      <member refid="class_node_1add9e86af3c4c50f8cc3a94701aec919a" prot="public" virt="non-virtual"><scope>Node</scope><name>addNode</name></member>
      <member refid="class_node_1acdd8a534d4f9cd113c6b7e17cd7f81bd" prot="public" virt="non-virtual"><scope>Node</scope><name>getCheck</name></member>
      <member refid="class_node_1a325a2c26bf75caab66d4674e4d405734" prot="public" virt="non-virtual"><scope>Node</scope><name>getDirect</name></member>
      <member refid="class_node_1aaa0bb57c10aa1b1e64d0f21e6142257c" prot="public" virt="non-virtual"><scope>Node</scope><name>getExist</name></member>
      <member refid="class_node_1af7b5e28ec7663054e08fcce98ca2272a" prot="public" virt="non-virtual"><scope>Node</scope><name>getPNext</name></member>
      <member refid="class_node_1a4de5bd34f40d854f7cae8f9ce94ca6f1" prot="public" virt="non-virtual"><scope>Node</scope><name>getShape</name></member>
      <member refid="class_node_1abd8c63f1d35fdce89239a045caf23d3d" prot="public" virt="non-virtual"><scope>Node</scope><name>getSpeed</name></member>
      <member refid="class_node_1a6c026e5d8c28591c6e2bd08c68619fd1" prot="public" virt="non-virtual"><scope>Node</scope><name>getX</name></member>
      <member refid="class_node_1abab48a3f494994d4f456897f3372d3ae" prot="public" virt="non-virtual"><scope>Node</scope><name>getY</name></member>
      <member refid="class_node_1a4f077b746d9431f5a7143c3467244fc8" prot="private" virt="non-virtual"><scope>Node</scope><name>mb_exist</name></member>
      <member refid="class_node_1a220147bce290ae75325ecdcb0398e31a" prot="private" virt="non-virtual"><scope>Node</scope><name>mc_shape</name></member>
      <member refid="class_node_1a4b95180cfc98d523321b61842d1a01d8" prot="private" virt="non-virtual"><scope>Node</scope><name>mi_direct</name></member>
      <member refid="class_node_1af9af46a882c51d11ae29cba4892302d6" prot="private" virt="non-virtual"><scope>Node</scope><name>mi_speed</name></member>
      <member refid="class_node_1a12d155ef94a9fc0db3b369c5199ba108" prot="private" virt="non-virtual"><scope>Node</scope><name>mi_x</name></member>
      <member refid="class_node_1a1744c7d9b37545bb73001399c7f855c4" prot="private" virt="non-virtual"><scope>Node</scope><name>mi_y</name></member>
      <member refid="class_node_1ab0b23dc41fc08a1dcccb04b09ae06d9d" prot="public" virt="non-virtual"><scope>Node</scope><name>movePosition</name></member>
      <member refid="class_node_1aed92691e64427085e41b0bd58860aa37" prot="private" virt="non-virtual"><scope>Node</scope><name>mp_next</name></member>
      <member refid="class_node_1ad7a34779cad45d997bfd6d3d8043c75f" prot="public" virt="non-virtual"><scope>Node</scope><name>Node</name></member>
      <member refid="class_node_1a2f2d97efa6eaf26c2f8e8b0cd1573f50" prot="public" virt="non-virtual"><scope>Node</scope><name>Node</name></member>
      <member refid="class_node_1ac1fbda4d3c444a43f209dd6af07a5ff4" prot="public" virt="non-virtual"><scope>Node</scope><name>setDirect</name></member>
      <member refid="class_node_1ab4a0973f82e40fb00538cffe3b6a887f" prot="public" virt="non-virtual"><scope>Node</scope><name>setExist</name></member>
      <member refid="class_node_1aba0f72cd14a2d1532ca5c8281c2be9c8" prot="public" virt="non-virtual"><scope>Node</scope><name>setPNext</name></member>
      <member refid="class_node_1ad87db00092d091058b0ec465e0624818" prot="public" virt="non-virtual"><scope>Node</scope><name>setPosition</name></member>
      <member refid="class_node_1ac3b392c215f2ff1b09b0be53de79d50c" prot="public" virt="non-virtual"><scope>Node</scope><name>setShape</name></member>
      <member refid="class_node_1a29c81ecb26563f7c247ea4f7fd035a1d" prot="public" virt="non-virtual"><scope>Node</scope><name>setSpeed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
